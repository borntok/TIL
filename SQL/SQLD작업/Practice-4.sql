CREATE TABLE EMP(
  EMPNO INT PRIMARY KEY,
  ENAME VARCHAR(30) NOT NULL,
  DEPTNO NUMBER(5) NOT NULL,
  MGR NUMBER(5),
  JOB VARCHAR(20) NOT NULL,
  SAL INT NOT NULL
);

INSERT INTO EMP VALUES(1000, 'TEST1', 20, 0, 'CLERK', 800);
INSERT INTO EMP VALUES(1001, 'TEST2', 30, 1000, 'SALESMAN', 1600);
INSERT INTO EMP VALUES(1002, 'TEST3', 30, 1000, 'SALESMAN', 1250);
INSERT INTO EMP VALUES(1003, 'TEST4', 20, 1000, 'MANAGER', 2975); 
INSERT INTO EMP VALUES(1004, 'TEST5', 30, 1000, 'SALESMAN', 1250); 
INSERT INTO EMP VALUES(1005, 'TEST6', 30, 1001, 'MANAGER', 2850); 
INSERT INTO EMP VALUES(1006, 'TEST7', 10, 1001, 'MANAGER', 2450); 
INSERT INTO EMP VALUES(1007, 'TEST8', 30, 1002, 'MANAGER', 2200); 
INSERT INTO EMP VALUES(1008, 'TEST9', 10, 1002, 'MANAGER', 2750); 
INSERT INTO EMP VALUES(1009, 'TEST10', 30, 1002, 'SALESMAN', 1500);  
INSERT INTO EMP VALUES(1010, 'TEST11', 20, 1002, 'CLERK', 1100);

COMMIT;

-- 모든 데이터는 입력에 상관없이 PK에 의해서 자동 정렬이 이루어진다.
-- ORDER BY절은 데이터가 많으면 CPU나 메모리 측면에서 상당히 많은 부하가 걸린다.
-- 오라클에서는 인덱스를 사용하여 출력하면 PK에 의해서 정렬이 됨을 확인할 수 있다.
SELECT /*+ INDEX_ASC(EMP SYS_C008366) */ * 
FROM EMP;

-- 정렬할 때는 ORDER BY절을 사용하면 된다. ORDER BY절은 쿼리문에서 가장 마지막에 실행된다.
SELECT *
FROM EMP
ORDER BY DEPTNO DESC, JOB;

-- DISTINCT: 데이터의 중복을 제거
SELECT DISTINCT DEPTNO
FROM EMP
ORDER BY DEPTNO;

-- ALIAS: 별칭
SELECT DEPTNO AS "부서번호"
FROM EMP;

-- 비교, 논리 연산자 사용
SELECT *
 FROM EMP
WHERE DEPTNO = 30
  AND SAL > 2000;
  
-- LIKE문(와일드카드 '%' 또는 '_') 사용
SELECT *
 FROM EMP
WHERE ENAME LIKE 'TEST1%';

SELECT *
 FROM EMP
WHERE ENAME LIKE '%1';

SELECT *
 FROM EMP
WHERE ENAME LIKE 'TEST_';

SELECT *
 FROM EMP
WHERE ENAME LIKE 'TEST__';

-- BETWEEN ~ AND: 지정된 범위에 있는 값을 조회 (연속적인 값)
SELECT *
 FROM EMP
WHERE SAL BETWEEN 1000 AND 2000; -- 1000이상 2000이하

SELECT *
 FROM EMP
WHERE SAL NOT BETWEEN 1000 AND 2000; -- 1000미만 2000초과

-- IN(): OR의 의미를 지님
SELECT *
 FROM EMP
WHERE JOB IN ('CLERK', 'SALESMAN');

SELECT *
 FROM EMP
WHERE JOB NOT IN ('CLERK', 'SALESMAN');

